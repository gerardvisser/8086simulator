/*
   Author:  Gerard Visser
   e-mail:  visser.gerard(at)gmail.com

   Copyright (C) 2024 Gerard Visser.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include "processorTestCode.h"

/* processorTestCode::mov[]
  mov dx, bp ; 2
  mov bx, si ; 2
  mov bl, cl ; 2
  mov cl, ah ; 2
  db 0x8B, 0xE2 ; mov sp, dx
  db 0x8B, 0xF9 ; mov di, cx
  db 0x8A, 0xEE ; mov ch, dh
  db 0x8A, 0xF8 ; mov bh, al

  mov [bx+si], di ; 2
  mov [bx+di], dh ; 2
  mov [bp+si], ax ; 2
  mov [bp+di], ah ; 2
  mov [si], si    ; 2
  mov [di], cl    ; 2
  mov [0x64], bp  ; 4
  mov [bx], bl    ; 2

  es: mov [bx+si+4], si    ; 4
  mov [bx+di+127], bl      ; 3
  ds: mov [bp+si+-2], bx   ; 4
  cs: mov [bp+si+-128], bh ; 4
  mov [bp+0], sp           ; 3

  ss: mov [si+0x100], ax ; 5
  mov [bx+-0x100], ah    ; 4

  mov di, [di]       ; 2
  mov ch, [si+-2]    ; 3
  mov si, [bx+0x200] ; 4

  mov ax, [0x100]  ; 3
  mov al, [0x100]  ; 3
  mov [0x102], ax  ; 3
  mov [0x104], al  ; 3

  mov bp, 0xBB39 ; 3
  mov bx, 0x90F4 ; 3
  mov dh, 0x56   ; 2
  mov ah, 0xBE   ; 2

  db 0xC7, 0xC0, 0xEF, 0x2D ; mov ax, 0x2DEF
  db 0xC6, 0xC2, 0x26       ; mov dl, 0x26

  mov word ptr [di], 0x1069       ; 4
  mov byte ptr [bp+di], 0x21      ; 3
  mov word ptr [bx+di+2], 0xC259  ; 5
  mov byte ptr [bp+4], 0xB7       ; 4
  mov word ptr [si+0x120], 0xC8A2 ; 6
  mov byte ptr [bx+si+0x90], 0xBD ; 5

  mov ss, dx         ; 2
  mov ds, [bx+2]     ; 3
  mov bp, cs         ; 2
  mov [si+0x100], es ; 4
*/
const uint8_t processorTestCode::mov[] = {
  0x89, 0xEA, 0x89, 0xF3, 0x88, 0xCB, 0x88, 0xE1, 0x8B, 0xE2, 0x8B, 0xF9, 0x8A, 0xEE, 0x8A, 0xF8,
  0x89, 0x38, 0x88, 0x31, 0x89, 0x02, 0x88, 0x23, 0x89, 0x34, 0x88, 0x0D, 0x89, 0x2E, 0x64, 0x00,
  0x88, 0x1F, 0x26, 0x89, 0x70, 0x04, 0x88, 0x59, 0x7F, 0x3E, 0x89, 0x5A, 0xFE, 0x2E, 0x88, 0x7A,
  0x80, 0x89, 0x66, 0x00, 0x36, 0x89, 0x84, 0x00, 0x01, 0x88, 0xA7, 0x00, 0xFF, 0x8B, 0x3D, 0x8A,
  0x6C, 0xFE, 0x8B, 0xB7, 0x00, 0x02, 0xA1, 0x00, 0x01, 0xA0, 0x00, 0x01, 0xA3, 0x02, 0x01, 0xA2,
  0x04, 0x01, 0xBD, 0x39, 0xBB, 0xBB, 0xF4, 0x90, 0xB6, 0x56, 0xB4, 0xBE, 0xC7, 0xC0, 0xEF, 0x2D,
  0xC6, 0xC2, 0x26, 0xC7, 0x05, 0x69, 0x10, 0xC6, 0x03, 0x21, 0xC7, 0x41, 0x02, 0x59, 0xC2, 0xC6,
  0x46, 0x04, 0xB7, 0xC7, 0x84, 0x20, 0x01, 0xA2, 0xC8, 0xC6, 0x80, 0x90, 0x00, 0xBD, 0x8E, 0xD2,
  0x8E, 0x5F, 0x02, 0x8C, 0xCD, 0x8C, 0x84, 0x00, 0x01
};
